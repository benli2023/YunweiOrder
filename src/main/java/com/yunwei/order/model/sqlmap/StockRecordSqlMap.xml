<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.StockRecord" class="com.yunwei.order.model.StockRecord">
        <result property="stockOperationId" column="stock_operation_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="staffId" column="staff_id"/>
        <result property="operType" column="oper_type"/>
        <result property="custId" column="cust_id"/>
        <result property="operDate" column="oper_date"/>
        <result property="approvalStatus" column="approval_status"/>
        <result property="approvalId" column="approval_id"/>
        <result property="stockId" column="stock_id"/>
        <result property="toStockId" column="to_stock_id"/>
        <result property="remark" column="remark"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="StockRecord.columns">
	    <![CDATA[
        stock_operation_id ,dept_id ,staff_id ,oper_type ,cust_id ,oper_date ,approval_status ,approval_id ,stock_id ,to_stock_id ,remark 
	    ]]>
	</sql>
	
    <insert id="StockRecord.insert" >
    <![CDATA[
        INSERT INTO stock_record (
        	stock_operation_id ,
        	dept_id ,
        	staff_id ,
        	oper_type ,
        	cust_id ,
        	oper_date ,
        	approval_status ,
        	approval_id ,
        	stock_id ,
        	to_stock_id ,
        	remark 
        ) VALUES (
        	#stockOperationId# ,
        	#deptId# ,
        	#staffId# ,
        	#operType# ,
        	#custId# ,
        	#operDate# ,
        	#approvalStatus# ,
        	#approvalId# ,
        	#stockId# ,
        	#toStockId# ,
        	#remark# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="stockOperationId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="StockRecord.update" >
    <![CDATA[
        UPDATE stock_record SET
	        dept_id = #deptId# ,
	        staff_id = #staffId# ,
	        oper_type = #operType# ,
	        cust_id = #custId# ,
	        oper_date = #operDate# ,
	        approval_status = #approvalStatus# ,
	        approval_id = #approvalId# ,
	        stock_id = #stockId# ,
	        to_stock_id = #toStockId# ,
	        remark = #remark# 
        WHERE 
	        stock_operation_id = #stockOperationId# 
    ]]>
    </update>

    <delete id="StockRecord.delete">
    <![CDATA[
        DELETE FROM stock_record WHERE
        stock_operation_id = #stockOperationId# 
    ]]>
    </delete>
    
    <select id="StockRecord.getById" resultMap="RM.StockRecord">
	    SELECT <include refid="StockRecord.columns"/>
	    <![CDATA[
	        FROM stock_record 
	        WHERE 
		        stock_operation_id = #stockOperationId# 
	    ]]>
    </select>

	<sql id="StockRecord.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="stockOperationId">
		             stock_operation_id = #stockOperationId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="deptId">
		             dept_id = #deptId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="staffId">
		             staff_id = #staffId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="operType">
		             oper_type = #operType#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="custId">
		             cust_id = #custId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="operDateBegin">
		             oper_date >= #operDateBegin#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="operDateEnd">
		             oper_date &lt;= #operDateEnd#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="approvalStatus">
		             approval_status = #approvalStatus#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="approvalId">
		             approval_id = #approvalId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="stockId">
		             stock_id = #stockId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="toStockId">
		             to_stock_id = #toStockId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="remark">
		             remark = #remark#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="StockRecord.findPage.count" resultClass="long">
        SELECT count(*) FROM stock_record <include refid="StockRecord.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="StockRecord.findPage" resultMap="RM.StockRecord">
    	SELECT <include refid="StockRecord.columns"/> FROM stock_record 
		<include refid="StockRecord.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>

	
</sqlMap>

