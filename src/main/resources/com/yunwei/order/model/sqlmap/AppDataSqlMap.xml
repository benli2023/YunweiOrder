<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.AppData" class="com.yunwei.order.model.AppData">
        <result property="appDataId" column="app_data_id"/>
        <result property="dataCode" column="data_code"/>
        <result property="dataValue" column="data_value"/>
        <result property="dataValueText" column="data_value_text"/>
        <result property="displayName" column="display_name"/>
        <result property="shortName" column="short_name"/>
        <result property="dataType" column="data_type"/>
        <result property="isAvailable" column="is_available"/>
        <result property="ctime" column="cTime"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="AppData.columns">
	    <![CDATA[
        app_data_id ,data_code ,data_value ,data_value_text ,display_name ,short_name ,data_type ,is_available ,cTime 
	    ]]>
	</sql>
	
    <insert id="AppData.insert" >
    <![CDATA[
        INSERT INTO app_data (
        	app_data_id ,
        	data_code ,
        	data_value ,
        	data_value_text ,
        	display_name ,
        	short_name ,
        	data_type ,
        	is_available ,
        	cTime 
        ) VALUES (
        	#appDataId# ,
        	#dataCode# ,
        	#dataValue# ,
        	#dataValueText# ,
        	#displayName# ,
        	#shortName# ,
        	#dataType# ,
        	#isAvailable# ,
        	#ctime# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="appDataId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="AppData.update" >
    <![CDATA[
        UPDATE app_data SET
	        data_code = #dataCode# ,
	        data_value = #dataValue# ,
	        data_value_text = #dataValueText# ,
	        display_name = #displayName# ,
	        short_name = #shortName# ,
	        data_type = #dataType# ,
	        is_available = #isAvailable# ,
	        cTime = #ctime# 
        WHERE 
	        app_data_id = #appDataId# 
    ]]>
    </update>

    <delete id="AppData.delete">
    <![CDATA[
        DELETE FROM app_data WHERE
        app_data_id = #appDataId# 
    ]]>
    </delete>
    
    <select id="AppData.getById" resultMap="RM.AppData">
	    SELECT <include refid="AppData.columns"/>
	    <![CDATA[
	        FROM app_data 
	        WHERE 
		        app_data_id = #appDataId# 
	    ]]>
    </select>

	<sql id="AppData.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="appDataId">
		             app_data_id = #appDataId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dataCode">
		             data_code = #dataCode#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dataValue">
		             data_value = #dataValue#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dataValueText">
		             data_value_text = #dataValueText#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="displayName">
		             display_name = #displayName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="shortName">
		             short_name = #shortName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dataType">
		             data_type = #dataType#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="isAvailable">
		             is_available = #isAvailable#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="ctimeBegin">
		             cTime >= #ctimeBegin#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="ctimeEnd">
		             cTime &lt;= #ctimeEnd#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="AppData.findPage.count" resultClass="long">
        SELECT count(*) FROM app_data <include refid="AppData.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="AppData.findPage" resultMap="RM.AppData">
    	SELECT <include refid="AppData.columns"/> FROM app_data 
		<include refid="AppData.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>

	
</sqlMap>

