<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.OrderGoods" class="com.yunwei.order.model.OrderGoods">
         <result property="goodsId" column="goods_id"/>
         <result property="goodsCode" column="goods_code"/>
        <result property="productId" column="product_id"/>
        <result property="productIdTxt" column="pro1_productname"/>
         <result property="orderId" column="order_id"/>
         <result property="unit" column="unit"/>
         <result property="unitPrice" column="unit_price"/>
         <result property="quantity" column="quantity"/>
         <result property="handedQuantity" column="handed_quantity"/>
         <result property="untaxedAmount" column="untaxed_amount"/>
         <result property="taxRate" column="tax_rate"/>
         <result property="outputTaxAmount" column="output_tax_amount"/>
         <result property="taxAmount" column="tax_amount"/>
         <result property="model" column="model"/>
         <result property="remark" column="remark"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="OrderGoods.columns">
	    <![CDATA[
         ord0.goods_id , ord0.goods_code , ord0.product_id , ord0.order_id , ord0.unit , ord0.unit_price , ord0.quantity , ord0.handed_quantity , ord0.untaxed_amount , ord0.tax_rate , ord0.output_tax_amount , ord0.tax_amount , ord0.model , ord0.remark  , pro1.product_name as pro1_productname
        
	    ]]>
	</sql>
	
    <insert id="OrderGoods.insert" >
    <![CDATA[
        INSERT INTO order_goods (
        	goods_id ,
        	goods_code ,
        	product_id ,
        	order_id ,
        	unit ,
        	unit_price ,
        	quantity ,
        	handed_quantity ,
        	untaxed_amount ,
        	tax_rate ,
        	output_tax_amount ,
        	tax_amount ,
        	model ,
        	remark 
        ) VALUES (
        	#goodsId# ,
        	#goodsCode# ,
        	#productId# ,
        	#orderId# ,
        	#unit# ,
        	#unitPrice# ,
        	#quantity# ,
        	#handedQuantity# ,
        	#untaxedAmount# ,
        	#taxRate# ,
        	#outputTaxAmount# ,
        	#taxAmount# ,
        	#model# ,
        	#remark# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="goodsId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="OrderGoods.update" >
    <![CDATA[
        UPDATE order_goods SET
	        goods_code = #goodsCode# ,
	        product_id = #productId# ,
	        order_id = #orderId# ,
	        unit = #unit# ,
	        unit_price = #unitPrice# ,
	        quantity = #quantity# ,
	        handed_quantity = #handedQuantity# ,
	        untaxed_amount = #untaxedAmount# ,
	        tax_rate = #taxRate# ,
	        output_tax_amount = #outputTaxAmount# ,
	        tax_amount = #taxAmount# ,
	        model = #model# ,
	        remark = #remark# 
        WHERE 
	        goods_id = #goodsId# 
    ]]>
    </update>

    <delete id="OrderGoods.delete">
    <![CDATA[
        DELETE FROM order_goods WHERE
        goods_id = #goodsId# 
    ]]>
    </delete>
    
    <select id="OrderGoods.getById" resultMap="RM.OrderGoods">
	    SELECT <include refid="OrderGoods.columns"/>
	    <![CDATA[
	        FROM order_goods AS ord0   Left Join product AS pro1 ON ord0.product_id=pro1.product_id
	        WHERE 
		        ord0.goods_id = #goodsId# 
	    ]]>
    </select>

	<sql id="OrderGoods.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="goodsId">
		              ord0.goods_id = #goodsId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="goodsCode">
		              ord0.goods_code = #goodsCode#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="productId">
		              ord0.product_id = #productId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="orderId">
		              ord0.order_id = #orderId#
		       </isNotEmpty>
		       <isNotEqual	prepend="AND" property="unit" compareValue="-1">  ord0.unit = #unit#</isNotEqual>	
		       <isNotEmpty prepend="AND" property="unitPrice">
		              ord0.unit_price = #unitPrice#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="quantity">
		              ord0.quantity = #quantity#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="handedQuantity">
		              ord0.handed_quantity = #handedQuantity#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="untaxedAmount">
		              ord0.untaxed_amount = #untaxedAmount#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="taxRate">
		              ord0.tax_rate = #taxRate#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="outputTaxAmount">
		              ord0.output_tax_amount = #outputTaxAmount#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="taxAmount">
		              ord0.tax_amount = #taxAmount#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="model">
		              ord0.model = #model#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="remark">
		              ord0.remark = #remark#
		       </isNotEmpty>
	       	   <isNotEmpty prepend="AND" property="searchTerm">
	        	(  ord0.goods_code like '%$searchTerm$%'   )
	           </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="OrderGoods.findPage.count" resultClass="long">
        SELECT count(*) FROM  order_goods AS ord0 <include refid="OrderGoods.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="OrderGoods.findPage" resultMap="RM.OrderGoods">
    	SELECT <include refid="OrderGoods.columns"/> FROM order_goods AS ord0   Left Join product AS pro1 ON ord0.product_id=pro1.product_id
		<include refid="OrderGoods.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY ord0.$sortColumns$
		</isNotEmpty>
    </select>

	
</sqlMap>

